;D:	main
;D:	{
;D:	array
;D:	boolean
;D:	[
;D:	8
;D:	]
;D:	tmp
;D:	;
;D:	int
;D:	a
;D:	,
;D:	b
;D:	,
;D:	c
;D:	,
;D:	d
;D:	,
;D:	e
;D:	;
;D:	int
;D:	i
;D:	,
;D:	index
;D:	;
;D:	boolean
;D:	stop
;D:	;
;D:	function
;D:	int
;D:	pow
;D:	(
;D:	int
;D:	base
;D:	;
;D:	int
;D:	pot
;D:	)
;D:	{
;D:	int
;D:	i
;D:	,
;D:	res
;D:	;
;D:	res
;D:	=
;D:	1
;D:	;
;D:	i
;D:	=
;D:	0
;D:	;
;D:	while
;D:	(
;D:	(
;D:	i
;D:	<
;D:	pot
;D:	)
;D:	)
;D:	{
;D:	res
;D:	=
;D:	res
;D:	*
;D:	base
;D:	;
;D:	i
;D:	=
;D:	i
;D:	+
;D:	1
;D:	;
;D:	}
;D:	return
;D:	res
;D:	;
;D:	}
;D:	scanf
;D:	a
;D:	;
;D:	scanf
;D:	b
;D:	;
;D:	stop
;D:	=
;D:	false
;D:	;
;D:	index
;D:	=
;D:	8
;D:	;
;D:	i
;D:	=
;D:	index
;D:	-
;D:	1
;D:	;
;D:	while
;D:	(
;D:	!
;D:	stop
;D:	&&
;D:	(
;D:	i
;D:	>
;D:	-
;D:	1
;D:	)
;D:	)
;D:	{
;D:	if
;D:	(
;D:	(
;D:	a
;D:	>
;D:	pow
;D:	(
;D:	2
;D:	,
;D:	i
;D:	)
;D:	-
;D:	1
;D:	)
;D:	)
;D:	{
;D:	tmp
;D:	[
;D:	i
;D:	]
;D:	=
;D:	true
;D:	;
;D:	a
;D:	=
;D:	a
;D:	-
;D:	pow
;D:	(
;D:	2
;D:	,
;D:	i
;D:	)
;D:	;
;D:	}
;D:	else
;D:	{
;D:	tmp
;D:	[
;D:	i
;D:	]
;D:	=
;D:	false
;D:	;
;D:	}
;D:	i
;D:	=
;D:	i
;D:	-
;D:	1
;D:	;
;D:	}
;D:	i
;D:	=
;D:	index
;D:	-
;D:	1
;D:	;
;D:	stop
;D:	=
;D:	false
;D:	;
;D:	while
;D:	(
;D:	!
;D:	stop
;D:	)
;D:	{
;D:	if
;D:	(
;D:	(
;D:	i
;D:	<
;D:	0
;D:	)
;D:	)
;D:	{
;D:	stop
;D:	=
;D:	true
;D:	;
;D:	c
;D:	=
;D:	0
;D:	;
;D:	i
;D:	=
;D:	0
;D:	;
;D:	while
;D:	(
;D:	(
;D:	i
;D:	<
;D:	index
;D:	)
;D:	)
;D:	{
;D:	if
;D:	(
;D:	tmp
;D:	[
;D:	i
;D:	]
;D:	)
;D:	{
;D:	c
;D:	=
;D:	c
;D:	+
;D:	pow
;D:	(
;D:	2
;D:	,
;D:	i
;D:	)
;D:	;
;D:	}
;D:	i
;D:	=
;D:	i
;D:	+
;D:	1
;D:	;
;D:	}
;D:	}
;D:	else
;D:	{
;D:	if
;D:	(
;D:	(
;D:	b
;D:	>
;D:	pow
;D:	(
;D:	2
;D:	,
;D:	i
;D:	)
;D:	-
;D:	1
;D:	)
;D:	)
;D:	{
;D:	tmp
;D:	[
;D:	i
;D:	]
;D:	=
;D:	tmp
;D:	[
;D:	i
;D:	]
;D:	&&
;D:	true
;D:	;
;D:	b
;D:	=
;D:	b
;D:	-
;D:	pow
;D:	(
;D:	2
;D:	,
;D:	i
;D:	)
;D:	;
;D:	}
;D:	else
;D:	{
;D:	tmp
;D:	[
;D:	i
;D:	]
;D:	=
;D:	tmp
;D:	[
;D:	i
;D:	]
;D:	&&
;D:	false
;D:	;
;D:	}
;D:	}
;D:	i
;D:	=
;D:	i
;D:	-
;D:	1
;D:	;
;D:	}
;D:	printf
;D:	c
;D:	;
;D:	}
